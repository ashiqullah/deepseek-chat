{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./config.service\";\nexport class ChatService {\n  constructor(http, config) {\n    this.http = http;\n    this.config = config;\n    this.apiUrl = this.config.apiUrl;\n    console.log(`ChatService initialized with API URL: ${this.apiUrl}`);\n  }\n  sendMessage(request) {\n    return this.http.post(`${this.apiUrl}/api/chat/send`, request);\n  }\n  getChatHistory(conversationId) {\n    return this.http.get(`${this.apiUrl}/api/chat/history/${conversationId}`);\n  }\n  clearChatHistory(conversationId) {\n    return this.http.delete(`${this.apiUrl}/api/chat/history/${conversationId}`);\n  }\n  getProviderStatus() {\n    return this.http.get(`${this.apiUrl}/api/chat/providers`);\n  }\n  healthCheck() {\n    console.log(`Health check URL: ${this.apiUrl}/api/chat/health`);\n    return this.http.get(`${this.apiUrl}/api/chat/health`);\n  }\n  static {\n    this.ɵfac = function ChatService_Factory(t) {\n      return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConfigService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ChatService,\n      factory: ChatService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ChatService","constructor","http","config","apiUrl","console","log","sendMessage","request","post","getChatHistory","conversationId","get","clearChatHistory","delete","getProviderStatus","healthCheck","i0","ɵɵinject","i1","HttpClient","i2","ConfigService","factory","ɵfac","providedIn"],"sources":["D:\\LLM\\Docker\\frontend\\src\\app\\chat.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ChatRequest, ChatResponse, ChatMessage, ProviderInfo } from './models/chat.models';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n  private apiUrl: string;\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) {\r\n    this.apiUrl = this.config.apiUrl;\r\n    console.log(`ChatService initialized with API URL: ${this.apiUrl}`);\r\n  }\r\n\r\n  sendMessage(request: ChatRequest): Observable<ChatResponse> {\r\n    return this.http.post<ChatResponse>(`${this.apiUrl}/api/chat/send`, request);\r\n  }\r\n\r\n  getChatHistory(conversationId: string): Observable<ChatMessage[]> {\r\n    return this.http.get<ChatMessage[]>(`${this.apiUrl}/api/chat/history/${conversationId}`);\r\n  }\r\n\r\n  clearChatHistory(conversationId: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/api/chat/history/${conversationId}`);\r\n  }\r\n\r\n  getProviderStatus(): Observable<{providers: ProviderInfo[]}> {\r\n    return this.http.get<{providers: ProviderInfo[]}>(`${this.apiUrl}/api/chat/providers`);\r\n  }\r\n\r\n  healthCheck(): Observable<any> {\r\n    console.log(`Health check URL: ${this.apiUrl}/api/chat/health`);\r\n    return this.http.get(`${this.apiUrl}/api/chat/health`);\r\n  }\r\n} "],"mappings":";;;AASA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAClD,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,MAAM,CAACC,MAAM;IAChCC,OAAO,CAACC,GAAG,CAAC,yCAAyC,IAAI,CAACF,MAAM,EAAE,CAAC;EACrE;EAEAG,WAAWA,CAACC,OAAoB;IAC9B,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAe,GAAG,IAAI,CAACL,MAAM,gBAAgB,EAAEI,OAAO,CAAC;EAC9E;EAEAE,cAAcA,CAACC,cAAsB;IACnC,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAgB,GAAG,IAAI,CAACR,MAAM,qBAAqBO,cAAc,EAAE,CAAC;EAC1F;EAEAE,gBAAgBA,CAACF,cAAsB;IACrC,OAAO,IAAI,CAACT,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACV,MAAM,qBAAqBO,cAAc,EAAE,CAAC;EAC9E;EAEAI,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACb,IAAI,CAACU,GAAG,CAA8B,GAAG,IAAI,CAACR,MAAM,qBAAqB,CAAC;EACxF;EAEAY,WAAWA,CAAA;IACTX,OAAO,CAACC,GAAG,CAAC,qBAAqB,IAAI,CAACF,MAAM,kBAAkB,CAAC;IAC/D,OAAO,IAAI,CAACF,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACR,MAAM,kBAAkB,CAAC;EACxD;;;uBA3BWJ,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;IAAA;EAAA;;;aAAXtB,WAAW;MAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}